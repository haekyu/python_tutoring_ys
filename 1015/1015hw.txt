============================================================
0. 10/15 숙제 overview
	- 함수 연습 3개
	- dictionary 연습 1개
============================================================


============================================================
1. 함수 연습 1
Factorial 함수를 구현해 보세요.
n!은 다음과 같이 정의합니다.
n이 0보다 작거나 같은 경우: n! = 1
n이 0보다 큰 경우: n! = 1부터 n 까지의 곱

예) 0! = 1, 3! = 3 * 2 * 1 = 6

============================================================

============================================================
2. 함수 연습 2
rank 구하기.
학생들의 점수를 input으로 받고, 각 학생들의 등수를 return하는 함수를 만들어 보세요. 
학생들의 점수는 숫자로 된 리스트가 들어옵니다.
점수가 높으면 등수는 높아집니다.
등수는 1등부터 시작합니다.

예) input이 [3, 4, 5, 1, 2] 이면
0번째 학생: 점수=3, 등수=3등
1번째 학생: 점수=4, 등수=2등
2번째 학생: 점수=5, 등수=1등
3번째 학생: 점수=1, 등수=5등
4번째 학생: 점수=2, 등수=4등
이므로, 등수를 순서대로 뽑은 리스트인 [3, 2, 1, 5, 4] 를 return하면 됩니다.

힌트) 학생 A의 등수는 "자신(A)의 점수보다 높은 다른 사람들의 명 수 + 1" 이 됩니다.

============================================================


============================================================
3. 함수 연습 3
시작하는 알파벳 구하는 함수 구현하기.
어떤 string이 input으로 주어져있을 때, 그 input의 가장 앞 알파벳을 출력하는 함수를 만들어 보세요.

예) input이 "apple" 이면 "a" 를 return.

============================================================


============================================================
4. dictionary 연습
단어들의 list가 input으로 들어올 때, 각 단어들을 시작 알파벳별로 저장하는 dictionary를 리턴하는 함수를 만들어 봅시다.

이 dictionary는 key가
어떤 알파벳이 되고, value는 input 내의 단어들 중 key로 시작하는 단어들을 모은 list입니다.

예) input = ["apple", "bear", "person", "aurora", "print", "boy"] 이 주어져 있습니다.
만약 key가 "a"이라면, "a"에 대한 value는 ["apple", "aurora"] 입니다. (단어들의 순서는 달라도 됩니다.)

힌트1) dictionary 의 value는 리스트가 될 수 있습니다.
힌트2) 리스트 lst에 어떤 변수 x를 추가하고싶다면 lst.append(x) 라고 하면 됩니다.
	예) lst = []
		lst.append(3)
		을 하면, lst는 [3]이 됩니다.
힌트3) 아래 skeleton code를 사용해도 됩니다.

def mk_word_dict(word_list):
	# Initialize a word dictionanry
	word_dict = dict()

	for w in word_lst:
		# Get the starting alphabet of w
		start = ????

		# Check whether the key (== start) is in the word dictionary
		start_is_in = ????

		# If the key is not in the dictionary, 
		#  add the key in the dictionary with an empty list
		if ????:
			word_dict[????] = []

		# Add the word into the word dictionary
		word_dict[????].append()

	# Retrun the dictionary
	return ????

words = ["apple", "bear", "person", "aurora", "print", "boy"] 
word_dict = mk_word_dict(????)
words_start_with_a = word_dict[????]
print(words_start_with_a)


============================================================
