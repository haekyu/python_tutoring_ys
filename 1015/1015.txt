* 오늘 할 것
	- 복습
		+ 데이터 타입
			* int / float / string / bool
		+ if 문 (조건문)
			* and / or / not ...
		+ for / while (loop 문)
			* continue (skip)
			* break (중간에 loop 찢어버리기)
			* 이중 삼중 .. loop
		+ 리스트 / array
			* 리스트 
				- 순서가 있는 자료구조 (= 여러 data 담는 그릇)
				- index == 몇 번째 순서
				- indexing == index번째의 값을 찝어내는 것
					* read; a = lst[3]
					* write; lst[3] = 2 
				- slicing == index 범위의 값들을 찝어내기
					* read; sublst = lst[3: 6]
					* write; lst[3: 6] = [0, 0, 0]
				- membership
					* in / not in
					* lst = [1, 2, 4, 0, 3]
					* 2 in lst == True
					* 2 not in lst == False
				- 자주 쓰이는 함수
					* lst = [1, 2, 4, 0, 3]
					* lst.index(0) == 3 (3번째에 0 있어서)
					* max(lst) == 4
					* min(lst) == 0
					* len(lst) == 5
			* array
				- 수학적인 list
				- import numpy as np
	- 함수
		+ """ 피하기
		+ 단어들
			- f(x) = x + 1
				: input = x
				: output = x + 1
			- f(3) ==> 4
			- parameter
				: x (input의 이름)
			- argument
				: 3 (parameter에 들어간 값)
			- default parameter
				: f(x=0) = x + 1
				: 0이 default parameter 값
				: 뒤의 parameter들만 가능
			- return
				: output
				: x + 1값
				: x + 1을 리턴한다
			- void (== 비었다)
				: return 이 없다
				def myprint():
					print("Hello world!")
		+ 함수 만들기
			# non-void 함수
			def <함수 이름>(<para1>, <para2>, <para3>=<d3>):
				<함수 내용>
				return <리턴 값>

			# void 함수
			def <함수 이름>(<parameter>):
				<함수 내용>
				return <리턴 값>

		+ 함수 사용하기 (call한다 / 부른다)
			: input 넣어주면 됨
			g(1, 3)
	- 리스트
		+ for 문이랑 함께 쓸 때
			- zip
				+ spase format 행렬일 때 많이 씀
			- enumerate
				+ index까지 같이 봄

				th = 0
				for e in lst:
					if e == max_val:
						print(th)
					th += 1

				lst = ['a', 'a', 'c', 'd']
				
				a 0
				a 1
				c 2
				d 3


				for i, e in enumerate(lst):
					<어쩌고 저쩌고>
						print(th)
						
	- dictionary
		* 빠른 검색!!! (= Hash table)
		* hash table의 개념
			- key : 검색어
			- value : 해당 검색어의 값
			
		* dict 써보기
			- color_dict = dict() 
				color_dict["abc"] = 3
				color_dict["abcd"] = "blue"
				color_dict[222] = "blue"
				color_dict["abc"]
			- membership 도 가능
				"abc" in color_dict
				"abc" not in color_dict
			- 값을 덮어쓸 수 있음
				color_dict["abc"] = "orange"

			- 자주 쓰는 함수
				* key들을 모조리 가져오기
					color_dict.keys()
				* value들을 모조리 가져오기
					color_dict.values()
			- {}

* 괄호
	- ()
		* tuple (== 변하지 않는 리스트)
		* 함수 인풋(parameter) 넣을 때
	- {}
		* dictionary
			ex) {key1: value1, key2: value2, key3: value3}
		* dictionary를 initialize할 때 dict()해도 되고 {} 해도 됨 
	- []
		* list 에서 indexing할 때
		* dictionary에서 key로 검색할 
